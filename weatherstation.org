#+STARTUP: showall
77
* Python
1. Read sensor
2. Store data to CSV for history  [Humidity,Temp,Pressure,DateTime]  TSV so html wont see delimiters?
   1. https://csvkit.readthedocs.io/en/latest/
3. Store data to .md file
4. Matplotlib chart
5. Python concatenate header, <meta http-equiv='refresh' content='15'/> </br>, chart, footer
6. python md -> html
7. Markdown -> html
8. sys pandoc .md -> html
9. sys cat files append head, body , foot
10. awk e.g. temp only
11. awk e.g. c->f
12. jinja template to csv?
13. tinydb ?

* script to auto ftp to cloud

* turn on Outside light from rpi

* report weather from local area openweather api

* set up on tripod

* publish to github pages or the like

* pysimplegui



* power saving

- kill webserver
- kill usb port

* bokeh
* https://plotly.com/python/plot-data-from-csv/

* Plot
#+NAME: Plot
#+BEGIN_SRC python :results replace  :file plotimage.png
import matplotlib.pyplot as plt

x = ['Maths', 'Physics', 'Chemistry']

y1 = [95, 88, 45]


plt.plot(x, y1, label="John")

y2 = [67, 45, 56]


plt.plot(x, y2, label="David")


y3 = [28, 67, 90]

plt.plot(x, y3, label="Tom")

plt.xlabel('Subjects')
plt.ylabel('Marks')

plt.title('Three lines on same graph!')

plt.legend()

plt.show()
#+END_SRC

#+RESULTS: Plot
[[file:plotimage.png]]


* Power
#+NAME: Power
#+BEGIN_SRC python :results output

production =  40*5 # 40 watts @ 5 hrs insolataion

consumption = 5*24 # 5 watts continuous

print(production-consumption)

#+END_SRC

#+RESULTS: Power
: 80



